module UtilViterbiSpec where

--import Test.Hspec
--
--utilViterbiSpec :: Spec
--utilViterbiSpec = do
--
--  describe "getPathTo" $ do
--    it "should get path from previous valve matrix" $ do
--      let valveLabels = ["DD", "BB", "JJ"]
--          valveIdxs = M.fromList $ valveLabels `zip` [1..]
--          previousValves = MT.fromLists [
--              ["AA", "BB", "JJ"],
--              ["AA", "DD", "--"],
--              ["AA", "BB", "BB"]
--            ]
--
--      let path1 = getPathTo previousValves valveIdxs "DD" 3
--      path1 `shouldBe` ["DD", "JJ", "BB", "AA"]
--
--      let path2 = getPathTo previousValves valveIdxs "JJ" 1
--      path2 `shouldBe` ["JJ", "AA"]
--
--  describe "getCandidates" $ do
--    it "should get candidates" $ do
--      let valveLabels = ["DD", "BB", "JJ"]
--          valveIdxs = M.fromList $ valveLabels `zip` [1..]
--          previousValves = MT.fromLists [
--              ["AA", "BB", "JJ"],
--              ["AA", "DD", "--"],
--              ["AA", "BB", "BB"]
--            ]
--
--      getCandidates valveLabels valveIdxs previousValves 3 "JJ" `shouldBe` ["DD", "BB"]
--      getCandidates valveLabels valveIdxs previousValves 3 "DD" `shouldBe` ["JJ"]
--
